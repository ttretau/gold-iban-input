/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   gold-iban-input.js
 */

import {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';

import {PaperInputBehavior} from '@polymer/paper-input/paper-input-behavior.js';

import {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';

import {html} from '@polymer/polymer/lib/utils/html-tag.js';

import {LegacyElementMixin} from '@polymer/polymer/lib/legacy/legacy-element-mixin.js';

interface GoldIbanInputElement extends PaperInputBehavior, IronFormElementBehavior, LegacyElementMixin, HTMLElement {

  /**
   * The label for this input.
   */
  label: string|null|undefined;
  value: string|null|undefined;

  /**
   * Returns a reference to the focusable element. Overridden from PaperInputBehavior
   * to correctly focus the native input.
   *    
   */
  readonly _focusableElement: any;
  importMeta: any;
  ready(): void;

  /**
   * Returns true if the element has a valid value, and sets the visual
   * error state.
   *
   * @returns Whether the input is currently valid or not.
   */
  validate(): boolean;

  /**
   * A handler that is called on input
   */
  _onValueChanged(value: any, oldValue: any): void;

  /**
   * Overidden from Polymer.IronControlState.
   */
  _onFocusedChanged(focused: any): void;
}

export {GoldIbanInputElement};

declare global {

  interface HTMLElementTagNameMap {
    "gold-iban-input": GoldIbanInputElement;
  }
}
